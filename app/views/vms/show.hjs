<!DOCTYPE html>
<html>
  <head>
    <title>{{vm.name}} - VM</title>
    <link rel='stylesheet' href='/bower_components/bootstrap/dist/css/bootstrap.css' />
    <link rel='stylesheet' href='/css/bootstrap-modal-bs3patch.css' />
    <link rel='stylesheet' href='/bower_components/bootstrap-modal/css/bootstrap-modal.css' />
    <link rel='stylesheet' href='/css/style.css' />
  </head>
  <body>
    <div class="navbar navbar-default navbar-static-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <a class="navbar-brand" href="/">VMShare</a>
        </div>
        <ul class="nav navbar-nav">
          <li class="vote">
            <!-- http://blog.nodeknockout.com/post/35364532732/protip-add-the-vote-ko-badge-to-your-app -->
            <iframe src="http://nodeknockout.com/iframe/nkzawa" frameborder=0 scrolling=no allowtransparency=true width=115 height=25></iframe>
          </li>
        </ul>
        <ul class="nav navbar-nav navbar-right">
        {{#user}}
          <li><a href="#"><img class="avatar-small" src="{{user.avatarUrl}}" alt="{{user.username}}"/>{{user.username}}</a></li>
          <li><a href="/logout">Logout</a></li>
        {{/user}}
        {{^user}}
          <li><a href="/login">Login</a></li>
        {{/user}}
        </ul>
      </div>
    </div>

    <div class="container">
      <h1 class="vm-show">
        <span class="owner">{{vm._creator.username}}</span> / <span class="name">{{vm.name}}</span>
      </h1>
      <div class="row">
        <div class="col-xs-9">
          <div class="terminal"></div>
          <div class="row">
            <div class="col-xs-1"></div>
            <div class="col-xs-11">
              <div class="input-group command-input-group">
                <span class="input-group-addon">$</span>
                <input class="form-control command-input collaboratorsOnly" type="text" name="command" readonly disabled autofocus/>
              </div>
            </div>
          </div>
        </div>
        <div class="col-xs-3">
          <button type="button" class="btn btn-primary add-user-btn collaboratorsOnly" disabled>Add a User</button>
          <div class="list-group users">
          {{#vm.users}}
            <a class="list-group-item user">
              <img src="{{avatarUrl}}" alt="{{username}}"/>{{username}}
            </a>
          {{/vm.users}}
          </div>
        </div>
      </div>
    </div>
    <hr/>

    <div id="add-user-modal" class="modal" tabindex="-1" data-width="760" style="display:none;">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
        <h4 class="modal-title">Add a User</h4>
      </div>
      <div class="modal-body">
        <p><input class="form-control" name="username" placeholder="username" type="text"></p>
      </div>
      <div class="modal-footer">
        <button type="button" data-dismiss="modal" class="btn btn-default">Close</button>
        <button type="button" class="btn btn-primary btn-add">Add</button>
      </div>
    </div>

    <div class="templates" style="display:none;">
      <script type="text/plain" class="output">
        <div class="row">
          <div class="col-xs-1">
            <img class="avatar" src="{%user.avatarUrl%}" alt="{%user.username%}"/>
          </div>
          <div class="col-xs-11">
            <h4>{%user.username%}</h4>
            <pre class="output">{%data%}</pre>
          </div>
        </div>
      </script>
      <script type="text/plain" class="user">
        <a class="list-group-item user">
          <img src="{{avatarUrl}}" alt="{{username}}"/>{{username}}
        </a>
      </script>
    </div>

    <script src="/signal.io/socket.io.js"></script>
    <script src="/bower_components/jquery/jquery.js"></script>
    <script src="/bower_components/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/bower_components/bootstrap-modal/js/bootstrap-modalmanager.js"></script>
    <script src="/bower_components/bootstrap-modal/js/bootstrap-modal.js"></script>
    <script src="/bower_components/hogan/web/builds/2.0.0/hogan-2.0.0.js"></script>
    <script type="text/javascript">
      // for bootstrap-modal
      $.fn.modal.defaults.spinner = $.fn.modalmanager.defaults.spinner =
        '<div class="loading-spinner" style="width: 200px; margin-left: -100px;">' +
          '<div class="progress progress-striped active">' +
            '<div class="progress-bar" style="width: 100%;"></div>' +
          '</div>' +
        '</div>';
    </script>
    <script type="text/javascript">
      var settings = {{&settings}};

      settings.isCollaborator = function() {
        if (!this.user) return false;

        var userId = this.user._id;
        var isCollaborator = false;
        $.each(this.vm.users, function(i, user) {
          isCollaborator = user._id == userId;
          return !isCollaborator;
        });
        return isCollaborator;
      };

      settings.addUser = function(userId) {
        this.vm.users.push(userId);
        this.refreshPage();
      };

      settings.refreshPage = function() {
        var isCollaborator = this.isCollaborator();
        $('.collaboratorsOnly')
            .prop('disabled', !isCollaborator)
            .prop('readonly', !isCollaborator);
      };

      // refresh
      settings.refreshPage();
    </script>
    <script type="text/javascript">
      function Input() {
        this.$input = $('.command-input');
        this.enable();
      }

      Input.prototype.value = function() {
        return this.$input.val();
      };

      Input.prototype.clear = function() {
        this.$input.val('');
      };

      Input.prototype.enable = function() {
        this.$input.prop('disabled', false);

        var self = this;
        clearInterval(this._focusId); // for sure;
        this._focusId = setInterval(function() {
          // always focus to input
          self.$input.focus();
        }, 500);
      };

      Input.prototype.disable = function() {
        this.$input.prop('disabled', true);
        clearInterval(this._focusId);
      };
    </script>
    <script type="text/javascript">
      var shellSocket = io('/vms/{{vm._id}}/shell', {path: '/signal.io'});
      var vmSocket = io('/vms/{{vm._id}}', {path: '/signal.io'});
      var hoganOption = {delimiters: '{% %}'};
      var input = new Input();
      var $templates = $('.templates');

      shellSocket.on('connect', function() {
        var $terminal = $('.terminal');
        var outputTemplate = Hogan.compile($templates.find('.output').text(), hoganOption);
        var lastUser = null;
        var $lastOutput = null;

        function scrollableHeight() {
          return $terminal[0].scrollHeight - $terminal.height();
        }

        shellSocket.on('output', function(data) {
          var mustScroll = $terminal.scrollTop() + 50 > scrollableHeight();

          if (!lastUser || lastUser._id !== data.user._id) {
            lastUser = data.user;
            $lastOutput = $(outputTemplate.render(data));
            $terminal.append($lastOutput);
          } else {
            var $output = $lastOutput.find('.output');
            $output.text($output.text() + data.data);
          }

          if (mustScroll) {
            $terminal.scrollTop(scrollableHeight() + 1);
          }
        });

        input.$input.keyup(function(e) {
          if (e.which !== 13) return;

          var command = input.value();
          shellSocket.emit('write', command);
          input.clear();
        });
      });

      vmSocket.on('connect', function() {
        var $users = $('.users');
        var $addUserBtn = $('.add-user-btn');
        var $addUserModal = $('#add-user-modal');
        var $addBtn = $addUserModal.find('.btn-add');
        var $usernameInput = $addUserModal.find('input[name="username"]');
        var userTemplate = Hogan.compile($templates.find('.user').text(), hoganOption);

        $addUserBtn.click(function(e) {
          input.disable();
          $addUserModal.on('hidden', function() {
            input.enable();
          });

          $addUserModal.modal();
        });

        $addBtn.click(function(e) {
          var username = $.trim($usernameInput.val());
          if (!username) return;

          vmSocket.emit('addUser', {username: username}, function(err, user) {
            if (err) return alert(user || 'Error: Unexpected error');

            settings.addUser(user._id);
            renderUser(user);
            $addUserModal.modal('toggle');
          });
        });

        vmSocket.on('addUser', function(err, user) {
          settings.addUser(user._id);
          renderUser(user);
        });

        function renderUser(user) {
          var html = userTemplate.render(user);
          $users.append(html);
        }
      });
    </script>
  </body>
</html>
